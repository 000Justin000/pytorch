load("@rules_cc//cc:defs.bzl", "cc_library")

cc_library(
    name = "base",
    hdrs = glob(
        [
            "*.h",
            "impl/*.h",
        ], exclude = [
            "CPUAllocator.h",
            "ScalarType.h",
        ],
    ),
    srcs = glob(
        [
            "*.cpp",
            "impl/*.cpp",
        ], exclude = [
            "CPUAllocator.cpp",
        ],
    ),
    deps = [
        ":ScalarType",
        "//c10/util",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "CPUAllocator",
    hdrs = ["CPUAllocator.h"],
    srcs = ["CPUAllocator.cpp"],
    deps = [
        ":alloc_cpu",
        ":base",
        ":free_cpu",
        "//c10/macros",
        "//c10/mobile",
        "//c10/util:base",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "ScalarType",
    hdrs = ["ScalarType.h"],
    deps = ["//c10/util:base"],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "alloc_cpu",
    hdrs = ["alloc_cpu.h"],
    srcs = ["alloc_cpu.cpp"],
    deps = [
        "//c10/macros",
        "//c10/util:base",
    ],
    linkstatic = True,
    visibility = [
        "//c10:__pkg__",
        "//c10/mobile:__pkg__",
    ],
)

cc_library(
    name = "free_cpu",
    hdrs = ["free_cpu.h"],
    srcs = ["free_cpu.cpp"],
    deps = ["//c10/macros"],
    visibility = [
        "//c10:__pkg__",
        "//c10/mobile:__pkg__",
    ],
)

filegroup(
    name = "headers",
    srcs = glob(
        [
            "*.h",
            "impl/*.h",
        ], exclude = [
        ],
    ),
    visibility = ["//c10:__pkg__"],
)
