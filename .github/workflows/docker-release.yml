name: docker-release

on:
  workflow_dispatch:
  pull_request:
    paths:
      - Dockerfile
      - docker.Makefile
  push:
    branches:
      - master
      - main
      - release/*
      - landchecks/*
    paths:
      - Dockerfile
      - docker.Makefile
  schedule:
    - cron: 1 3 * * 3

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.event_name == 'workflow_dispatch' }}
  cancel-in-progress: true

env:
  BUILD_PROGRESS: plain
  BUILD_TYPE: official
  DOCKER_ORG: pytorch
  USE_BUILDX: 1
  NO_BUILD_SUFFIX: True
  # WITH_PUSH: ${{ github.event_name == 'schedule' }}

jobs:
  build:
    runs-on: [self-hosted, linux.2xlarge]
    timeout-minutes: 240
    strategy:
      matrix:
        include:
          # nvidia specific images don't exist for arm64 so only build the runtime image
          - image_type: runtime
            platform: linux/arm64,linux/amd64
          - image_type: devel
            platform: linux/amd64
    env:
      BUILD_PLATFORMS: ${{ matrix.platform }}
      BUILD_IMAGE_TYPE: ${{ matrix.image_type }}
    steps:
      # [see note: pytorch repo ref]
      # deep clone (fetch-depth 0) required for git merge-base
      - name: Checkout PyTorch
        uses: pytorch/pytorch/.github/actions/checkout-pytorch@master
      - name: Setup Linux
        uses: ./.github/actions/setup-linux
      # Setup multi-arch image builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        env:
          QEMU_BINARY_PATH: ${{ runner.temp }}/bin
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup job specific variables
        run: |
          set -eou pipefail
          # To get QEMU binaries in our PATh
          echo "${RUNNER_TEMP}/bin" >> "${GITHUB_PATH}"
          # Generate PyTorch version to use
          echo "PYTORCH_VERSION=$(python .github/scripts/generate_pytorch_version.py)" >> "${GITHUB_ENV}"
      - name: Run docker build
        run: |
          make -f docker.Makefile ${BUILD_IMAGE_TYPE}-image
      # TODO: push
